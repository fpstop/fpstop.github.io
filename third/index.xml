<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thirds on 徐锦平的博客</title>
    <link>http://www.fpstop.com/third/</link>
    <description>Recent content in Thirds on 徐锦平的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 May 2017 18:23:27 +0800</lastBuildDate>
    <atom:link href="http://www.fpstop.com/third/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>protobuf的DebugString方法，汉字乱码</title>
      <link>http://www.fpstop.com/third/protobuf_string/</link>
      <pubDate>Mon, 22 May 2017 18:23:27 +0800</pubDate>
      
      <guid>http://www.fpstop.com/third/protobuf_string/</guid>
      <description>

&lt;p&gt;本文不是解决乱码问题，是要提取乱码内容。游戏上线后要做舆情分析，想收集前两日玩家游戏内聊天内容，无奈没有专门的日志，只能从网络库日志提取protobuf的内容。&lt;/p&gt;

&lt;p&gt;网络库会把每条收到的protobuf协议都调用方法，日志打印所有字段的值，但是汉子会打出类似&amp;rdquo;\346\234\211\344\272\272\345\220\227&amp;rdquo;.想把这些编码转化为能看懂的汉子。&lt;/p&gt;

&lt;h1 id=&#34;1-尝试编码转换&#34;&gt;1 尝试编码转换&lt;/h1&gt;

&lt;p&gt;游戏内的聊天文字用的是utf8的格式，不过看着上面的编码有超过256 char最大值的，看着像双字节的unicode，转成unicode后显示也是乱码，后来用utf8，ansi看都是乱码，只好从代码分析是如何打印的了。&lt;/p&gt;

&lt;h1 id=&#34;2-分析debugstring函数&#34;&gt;2 分析DebugString函数&lt;/h1&gt;

&lt;p&gt;最终会调用到下面的函数，原来是八进制的，仔细一看，确实是。所以剩下的就好做了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Escapes &#39;src&#39; using C-style escape sequences, and appends the escaped string
// to &#39;dest&#39;. This version is faster than calling CEscapeInternal as it computes
// the required space using a lookup table, and also does not do any special
// handling for Hex or UTF-8 characters.
// ----------------------------------------------------------------------
void CEscapeAndAppend(StringPiece src, string* dest) {
  size_t escaped_len = CEscapedLength(src);
  if (escaped_len == src.size()) {
    dest-&amp;gt;append(src.data(), src.size());
    return;
  }

  size_t cur_dest_len = dest-&amp;gt;size();
  dest-&amp;gt;resize(cur_dest_len + escaped_len);
  char* append_ptr = &amp;amp;(*dest)[cur_dest_len];

  for (int i = 0; i &amp;lt; src.size(); ++i) {
    unsigned char c = static_cast&amp;lt;unsigned char&amp;gt;(src[i]);
    switch (c) {
      case &#39;\n&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;n&#39;; break;
      case &#39;\r&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;r&#39;; break;
      case &#39;\t&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;t&#39;; break;
      case &#39;\&amp;quot;&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;\&amp;quot;&#39;; break;
      case &#39;\&#39;&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;\&#39;&#39;; break;
      case &#39;\\&#39;: *append_ptr++ = &#39;\\&#39;; *append_ptr++ = &#39;\\&#39;; break;
      default:
        if (!isprint(c)) {
          *append_ptr++ = &#39;\\&#39;;
          *append_ptr++ = &#39;0&#39; + c / 64;
          *append_ptr++ = &#39;0&#39; + (c % 64) / 8;
          *append_ptr++ = &#39;0&#39; + c % 8;
        } else {
          *append_ptr++ = c;
        }
        break;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;3-提取数据-输出&#34;&gt;3 提取数据，输出&lt;/h1&gt;

&lt;p&gt;第一步先用c++11 的正则表达式提取数据，然后再用strtol 将八进制转化输出即可，代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;quot;stdafx.h&amp;quot;
#include &amp;quot;../../../Com/CFunc.hpp&amp;quot;
#include &amp;quot;../../../Com/CStr.hpp&amp;quot;
#include &amp;quot;../../../Com/CFile.hpp&amp;quot;
#include &amp;lt;regex&amp;gt;
using namespace std;



int main()
{
    linevec_t lines;
    XReadFileLine(&amp;quot;chat.csv&amp;quot;, lines);

    std::regex reg(&amp;quot;\\\\[0-7]{3}&amp;quot;, std::regex_constants::ECMAScript);

    sregex_token_iterator end;
    for (auto s:lines)
    {
        string chat;
        sregex_token_iterator it(s.begin(), s.end(), reg);
        while (it != end)
        {
            //cout &amp;lt;&amp;lt; *it&amp;lt;&amp;lt;&amp;quot; &amp;quot;;
            string ss = *it;
            ++it;

            char sz[4] = {0};
            sz[0] = ss[1];
            sz[1] = ss[2];
            sz[2] = ss[3];
            //cout &amp;lt;&amp;lt; sz;

            int ret = strtol(sz, NULL, 8);
            chat += char(ret);
        }
        cout &amp;lt;&amp;lt; chat &amp;lt;&amp;lt; endl;
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
