<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>徐锦平的博客</title>
    <link>http://www.fpstop.com/</link>
    <description>Recent content on 徐锦平的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Mar 2017 21:42:24 +0800</lastBuildDate>
    <atom:link href="http://www.fpstop.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>香港旅游计划</title>
      <link>http://www.fpstop.com/life/hongkong_plan/</link>
      <pubDate>Tue, 21 Mar 2017 21:42:24 +0800</pubDate>
      
      <guid>http://www.fpstop.com/life/hongkong_plan/</guid>
      <description>

&lt;h1 id=&#34;3月31日&#34;&gt;3月31日&lt;/h1&gt;

&lt;p&gt;大连出发到深圳.&lt;/p&gt;

&lt;p&gt;猪宝宝：13：50~17：15？&lt;/p&gt;

&lt;p&gt;徐宝宝：18：20~22：20&lt;/p&gt;

&lt;p&gt;酒店：&lt;a href=&#34;http://hotels.ctrip.com/hotel/6075485.html#ctm_ref=hod_hp_sb_lst&#34;&gt;7天优品酒店&lt;/a&gt;（深圳机场T3航站楼）&lt;/p&gt;

&lt;p&gt;电话0755-29992779&lt;/p&gt;

&lt;p&gt;深圳 宝安区 西乡街道黄田岗贝工业区17号&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;4月1日&#34;&gt;4月1日&lt;/h1&gt;

&lt;p&gt;坐船或者坐车&lt;/p&gt;

&lt;h2 id=&#34;汽车&#34;&gt;汽车&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://j.map.baidu.com/9J1he&#34;&gt;深圳酒店到汽车站&lt;/a&gt;:约10公里，有公交&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bus.ctrip.com/busListn.html?from=%E6%B7%B1%E5%9C%B3&amp;amp;to=%E7%8F%A0%E6%B5%B7&amp;amp;date=2017-04-01&#34;&gt;深圳到珠海&lt;/a&gt; 宝安汽车站 到 拱北汽车客运站:价格：90 约2小时&lt;/p&gt;

&lt;p&gt;珠海拱北汽车站到拱北：就400多米&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;船&#34;&gt;船&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://j.map.baidu.com/Qb1he&#34;&gt;深圳酒店到蛇口&lt;/a&gt; 二三十公里，有公交&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bus.ctrip.com/ship/list.html?from=%E6%B7%B1%E5%9C%B3&amp;amp;to=%E6%BE%B3%E9%97%A8&amp;amp;date=2017-04-01&amp;amp;utm_source=Ctrip_shipSearch&#34;&gt;蛇口港 到 珠海九洲港&lt;/a&gt; ：价格：120 约1小时&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://j.map.baidu.com/Sz1he&#34;&gt;珠海九洲港到拱北&lt;/a&gt; 9公里，有公交&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;入住酒店，然后去&lt;a href=&#34;http://j.map.baidu.com/4N1he&#34;&gt;拱北过关去澳门&lt;/a&gt;,3.7公里，可以不行看看澳门的街景，感受一下。也可以做公交。
大三巴上面有个博物馆，还有炮台，下来以后是个商业区，有特色小吃，牛杂:)。&lt;/p&gt;

&lt;p&gt;澳门有好多车可以免费接送去赌场，猪宝宝可以看看去赌场之前还想去哪，赌场夜景比较好。&lt;/p&gt;

&lt;p&gt;拱北口岸通关时间：有说6:00到次日 1：00，也有说7：00到24：00的，到时候问问。&lt;/p&gt;

&lt;p&gt;晚上回来美美睡一觉，不过酒店还没订奥。&lt;/p&gt;

&lt;h1 id=&#34;4月2日&#34;&gt;4月2日&lt;/h1&gt;

&lt;h2 id=&#34;船-1&#34;&gt;船&lt;/h2&gt;

&lt;p&gt;拱北酒到九洲港：参考上，9公里，有公交&lt;/p&gt;

&lt;p&gt;九洲港到蛇口港：参考上，120，1小时&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://j.map.baidu.com/uc3he&#34;&gt;蛇口港 到 罗湖口岸&lt;/a&gt;:约30公里，有地铁，1小时12分钟&lt;/p&gt;

&lt;h2 id=&#34;汽车-1&#34;&gt;汽车&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://bus.ctrip.com/busListn.html?from=%E7%8F%A0%E6%B5%B7&amp;amp;to=%E6%B7%B1%E5%9C%B3&amp;amp;date=2017-04-01&#34;&gt;拱北汽车客运站 到 深圳罗湖汽车客运站&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;拱北口岸离拱北汽车站很近啦，罗湖汽车站离罗湖口岸也很近。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;罗湖口岸到酒店&#34;&gt;罗湖口岸到酒店&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gss0.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=10911509ba096b63814c56563c03ab7c/8b82b9014a90f603695a4e613d12b31bb051ed2a.jpg&#34;&gt;地铁图&lt;/a&gt;
1 东铁线，罗湖站上车九龙塘下车.
2 观塘线，九龙塘到太子。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网络库接口思索</title>
      <link>http://www.fpstop.com/think/net_interface/</link>
      <pubDate>Sun, 19 Mar 2017 19:40:51 +0800</pubDate>
      
      <guid>http://www.fpstop.com/think/net_interface/</guid>
      <description>

&lt;p&gt;自从linux出现了epoll，windows的完成端口，网络编程好多年没有什么变化了。本文结合工作中遇到的问题，说说网络库的接口的一些思索。&lt;/p&gt;

&lt;h1 id=&#34;1-背景&#34;&gt;1 背景&lt;/h1&gt;

&lt;p&gt;因为做的是fps类的网游的服务器，游戏里跑，跳，开枪等都是由客户端引擎同步函数实现，没有我什么事，所以主要的逻辑都很简单，一些活动，商城购买，聊天等逻辑，可以说没有什么难点，因为项目的周期比较长，一共有三套网络库在使用。。。有封装boost的，还有老同事自己封装的两套。自从linux出现了epoll，windows的完成端口，网络编程好多年没有什么变化了。这里主要讨论的是异步的网络编程。&lt;/p&gt;

&lt;h1 id=&#34;2-我心目中的网络库的功能&#34;&gt;2 我心目中的网络库的功能&lt;/h1&gt;

&lt;h2 id=&#34;2-1-通知上层网络事件-连接-断开-可读-可写&#34;&gt;2.1 通知上层网络事件：连接，断开，可读，可写。&lt;/h2&gt;

&lt;p&gt;基本的epoll已经实现了这些最基本的功能，简单的封装一下即可。
库会告诉上层目前可读啦，可写啦，可以接收连接啦，已经连上啦，但是不会帮上层去做这些事情，只是告诉你可以做了。&lt;/p&gt;

&lt;h2 id=&#34;2-2-在2-1基础上-网络事件到来时-帮助我们做一些事情&#34;&gt;2.2 在2.1基础上，网络事件到来时，帮助我们做一些事情&lt;/h2&gt;

&lt;p&gt;例如可读写时，自动从系统读缓冲区把数据读好，或者把用户写缓存写入系统的写缓冲区，或者调用accept接受一个连接。&lt;/p&gt;

&lt;h2 id=&#34;2-3-分包&#34;&gt;2.3 分包&lt;/h2&gt;

&lt;p&gt;我们知道在网络通信时,tcp是基于流的，分包只是我们逻辑上的把字节流分成若干部分。发送方发了两个包，有可能接收方1次收到了两个包，也有可能接收方分3次才把第一个包接受完，并接收了部分第2个包。一般我们都会在每个包的前两个字节里加上这个包的长度，这样接收方可以根据这个长度把收到的字节流区分成若干个包。
而逻辑层使用时，不应该处理这些，应该等网络层判断收到一个完整的包以后，再通知逻辑层去处理。
但是这样有个缺点，网络库就需要规定定义协议长度的规则，不过一般都是在包头加若干个字节定义长度。
例如我们手游项目用的是protobuf协议，但是也需要在头部加两个字节代表长度。&lt;/p&gt;

&lt;p&gt;未完待续。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>windows编译redis</title>
      <link>http://www.fpstop.com/redis/windows%E7%BC%96%E8%AF%91redis/</link>
      <pubDate>Sun, 12 Mar 2017 19:31:50 +0800</pubDate>
      
      <guid>http://www.fpstop.com/redis/windows%E7%BC%96%E8%AF%91redis/</guid>
      <description>

&lt;p&gt;假设大家都已经了解redis了，本文只讲redis的windows上的编译。&lt;/p&gt;

&lt;h1 id=&#34;1-windows编译redis&#34;&gt;1.windows编译redis&lt;/h1&gt;

&lt;h2 id=&#34;1-1下载&#34;&gt;1.1下载&lt;/h2&gt;

&lt;p&gt;微软维护了一个windows版本，地址在&lt;a href=&#34;https://github.com/MSOpenTech/redis&#34;&gt;https://github.com/MSOpenTech/redis&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Redis project does not officially support Windows.
However, the Microsoft Open Tech group develops and maintains this Windows port targeting Win64.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;redis官方不支持windows编译，但是微软维护了一个windows版本。既然这个出现在redis官网上，想必也是认可的。最起码用来研究学习时没问题的。&lt;/p&gt;

&lt;h2 id=&#34;1-2-编译&#34;&gt;1.2 编译&lt;/h2&gt;

&lt;p&gt;可以用vs2015 直接打开工程文件
- server：&amp;rdquo;\redis-2.8_win\msvs\RedisServer.sln&amp;rdquo;
- Hiredis异步例子：&amp;rdquo;\redis-2.8_win\msvs\HiredisExample\HiredisExample.sln&amp;rdquo;&lt;/p&gt;

&lt;p&gt;server 很顺利的编译通过，但是Hiredis异步例子编译时报了一个错误,是个类型重定义错误。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;\src\win32_interop\win32_types.h(37): error C2371: &#39;off_t&#39;: redefinition; different basic types
&amp;gt;c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\sys\types.h(42): note: see declaration of &#39;off_t&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很明显，是自己定义的类型和默认的类型重复了。打开 win32_types.h 文件看看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* The Posix version of Redis defines off_t as 64-bit integers, so we do the same.
 * On Windows, these types are defined as 32-bit in sys/types.h under and #ifndef _OFF_T_DEFINED
 * So we define _OFF_T_DEFINED at the project level, to make sure that that definition is never included.
 * If you get an error about re-definition, make sure to include this file before sys/types.h, or any other
 * file that include it (eg wchar.h).
 * _off_t is also defined #ifndef _OFF_T_DEFINED, so we need to define it here.
 * It is used by the CRT internally (but not by Redis), so we leave it as 32-bit.
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原来，微软团队发现redis在Posix体系下，off_t被定义成64位，而在windows下被sys\types.h文件定义成32位。&lt;/p&gt;

&lt;p&gt;sys\types.h&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#ifndef _OFF_T_DEFINED
    #define _OFF_T_DEFINED

    typedef long _off_t; // file offset value

    #if !__STDC__
        typedef _off_t off_t;
    #endif
#endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后windows团队就在工程属性里定义了_OFF_T_DEFINED （So we define _OFF_T_DEFINED at the project level），使32位的不生效，用自己定义在文件的，但是为什么还是出现重定义了呢？&lt;/p&gt;

&lt;p&gt;因为他们忘记在工程属性里定义啦，加回来就行拉。。。忘记定义了这个宏，所以默认的就生效了，自己也定义一份，当然编不过了。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
